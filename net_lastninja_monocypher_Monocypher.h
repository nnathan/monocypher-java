/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class net_lastninja_monocypher_Monocypher */

#ifndef _Included_net_lastninja_monocypher_Monocypher
#define _Included_net_lastninja_monocypher_Monocypher
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_verify16
 * Signature: ([B[B)I
 */
JNIEXPORT jint JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1verify16
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_verify32
 * Signature: ([B[B)I
 */
JNIEXPORT jint JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1verify32
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_verify64
 * Signature: ([B[B)I
 */
JNIEXPORT jint JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1verify64
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_wipe
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1wipe___3B
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_aead_lock
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[BLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1aead_1lock
  (JNIEnv *, jobject, jobject, jobject, jbyteArray, jobject, jobject, jobject);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_aead_unlock
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[BLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1aead_1unlock
  (JNIEnv *, jobject, jobject, jobject, jbyteArray, jobject, jobject, jobject);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_aead_init_x
 * Signature: (Lnet/lastninja/monocypher/Monocypher/AEAD_ctx;[B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1aead_1init_1x
  (JNIEnv *, jobject, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_aead_init_djb
 * Signature: (Lnet/lastninja/monocypher/Monocypher/AEAD_ctx;[B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1aead_1init_1djb
  (JNIEnv *, jobject, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_aead_init_ietf
 * Signature: (Lnet/lastninja/monocypher/Monocypher/AEAD_ctx;[B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1aead_1init_1ietf
  (JNIEnv *, jobject, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_wipe
 * Signature: (Lnet/lastninja/monocypher/Monocypher/AEAD_ctx;)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1wipe__Lnet_lastninja_monocypher_Monocypher_00024AEAD_1ctx_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_aead_write
 * Signature: (Lnet/lastninja/monocypher/Monocypher/AEAD_ctx;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1aead_1write
  (JNIEnv *, jobject, jobject, jobject, jobject, jobject, jobject);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_aead_read
 * Signature: (Lnet/lastninja/monocypher/Monocypher/AEAD_ctx;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1aead_1read
  (JNIEnv *, jobject, jobject, jobject, jobject, jobject, jobject);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_blake2b
 * Signature: ([B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1blake2b
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_blake2b_keyed
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1blake2b_1keyed
  (JNIEnv *, jobject, jobject, jobject, jobject);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_blake2b_init
 * Signature: (Lnet/lastninja/monocypher/Monocypher/Blake2b_ctx;J)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1blake2b_1init
  (JNIEnv *, jobject, jobject, jlong);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_blake2b_update
 * Signature: (Lnet/lastninja/monocypher/Monocypher/Blake2b_ctx;[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1blake2b_1update
  (JNIEnv *, jobject, jobject, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_blake2b_final
 * Signature: (Lnet/lastninja/monocypher/Monocypher/Blake2b_ctx;[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1blake2b_1final
  (JNIEnv *, jobject, jobject, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_wipe
 * Signature: (Lnet/lastninja/monocypher/Monocypher/Blake2b_ctx;)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1wipe__Lnet_lastninja_monocypher_Monocypher_00024Blake2b_1ctx_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_argon2
 * Signature: ([BLnet/lastninja/monocypher/Monocypher/Argon2_config;Lnet/lastninja/monocypher/Monocypher/Argon2_inputs;Lnet/lastninja/monocypher/Monocypher/Argon2_extras;)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1argon2
  (JNIEnv *, jobject, jbyteArray, jobject, jobject, jobject);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_wipe
 * Signature: (Lnet/lastninja/monocypher/Monocypher/Argon2_inputs;)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1wipe__Lnet_lastninja_monocypher_Monocypher_00024Argon2_1inputs_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_wipe
 * Signature: (Lnet/lastninja/monocypher/Monocypher/Argon2_extras;)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1wipe__Lnet_lastninja_monocypher_Monocypher_00024Argon2_1extras_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_x25519_public_key
 * Signature: ([B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1x25519_1public_1key
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_x25519
 * Signature: ([B[B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1x25519
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_x25519_to_eddsa
 * Signature: ([B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1x25519_1to_1eddsa
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_x25519_inverse
 * Signature: ([B[B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1x25519_1inverse
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_x25519_dirty_small
 * Signature: ([B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1x25519_1dirty_1small
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_x25519_dirty_fast
 * Signature: ([B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1x25519_1dirty_1fast
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_eddsa_key_pair
 * Signature: ([B[B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1eddsa_1key_1pair
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_eddsa_sign
 * Signature: ([B[B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1eddsa_1sign
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_eddsa_check
 * Signature: ([B[B[B)I
 */
JNIEXPORT jint JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1eddsa_1check
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_eddsa_to_x25519
 * Signature: ([B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1eddsa_1to_1x25519
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_eddsa_trim_scalar
 * Signature: ([B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1eddsa_1trim_1scalar
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_eddsa_reduce
 * Signature: ([B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1eddsa_1reduce
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_eddsa_mul_add
 * Signature: ([B[B[B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1eddsa_1mul_1add
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_eddsa_scalarbase
 * Signature: ([B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1eddsa_1scalarbase
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_chacha20_h
 * Signature: ([B[B[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1chacha20_1h
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_chacha20_djb
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;J)J
 */
JNIEXPORT jlong JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1chacha20_1djb
  (JNIEnv *, jobject, jobject, jobject, jlong, jobject, jobject, jlong);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_chacha20_ietf
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;J)J
 */
JNIEXPORT jlong JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1chacha20_1ietf
  (JNIEnv *, jobject, jobject, jobject, jlong, jobject, jobject, jlong);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_chacha20_x
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;J)J
 */
JNIEXPORT jlong JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1chacha20_1x
  (JNIEnv *, jobject, jobject, jobject, jlong, jobject, jobject, jlong);

/*
 * Class:     net_lastninja_monocypher_Monocypher
 * Method:    crypto_poly1305
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[B)V
 */
JNIEXPORT void JNICALL Java_net_lastninja_monocypher_Monocypher_crypto_1poly1305
  (JNIEnv *, jobject, jobject, jobject, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
